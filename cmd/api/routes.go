package main

import (
	_ "github.com/aerosystems/checkmail-service/docs" // docs are generated by Swag CLI, you have to import it.
	logger "github.com/chi-middleware/logrus-logger"
	"github.com/go-chi/chi/v5"
	"github.com/go-chi/chi/v5/middleware"
	"github.com/go-chi/cors"
	"github.com/sirupsen/logrus"
	httpSwagger "github.com/swaggo/http-swagger"
	"net/http"
	"os"
)

func (app *Config) routes(log *logrus.Logger) http.Handler {
	mux := chi.NewRouter()
	mux.Use(logger.Logger("router", log))

	mux.Use(cors.Handler(cors.Options{
		AllowedOrigins:   []string{"https://*", "http://*"},
		AllowedMethods:   []string{"GET", "POST", "OPTIONS"},
		AllowedHeaders:   []string{"Accept", "Content-Type"},
		ExposedHeaders:   []string{"Link"},
		AllowCredentials: true,
		MaxAge:           300,
	}))

	// Public routes
	mux.Use(middleware.Heartbeat("/ping"))

	// Auth X-API-KEY implemented on API Gateway
	mux.Post("/v1/inspect", app.BaseHandler.Inspect)

	// Private routes Basic Auth
	mux.Group(func(mux chi.Router) {
		mux.Use(middleware.BasicAuth("Swagger Docs", map[string]string{
			os.Getenv("BASIC_AUTH_DOCS_USERNAME"): os.Getenv("BASIC_AUTH_DOCS_PASSWORD"),
		}))
		mux.Get("/docs/*", httpSwagger.Handler(
			httpSwagger.URL("doc.json"), // The url pointing to API definition
		))
	})

	// Private routes OAuth 2.0: check roles [admin, support]. Auth implemented on API Gateway
	mux.Group(func(mux chi.Router) {
		mux.Use(func(next http.Handler) http.Handler {
			return app.TokenAuthMiddleware(next, "admin", "support")
		})

		mux.Get("/v1/domains/{domainName}", app.BaseHandler.DomainGet)
		mux.Post("/v1/domains", app.BaseHandler.DomainCreate)
		mux.Patch("/v1/domains/{domainName}", app.BaseHandler.DomainUpdate)
		mux.Delete("/v1/domains/{domainName}", app.BaseHandler.DomainDelete)
	})

	return mux
}
